// Forms
//
//
//

//
// Form group
//

.form-group {
  margin-bottom: $space-default;
}
.form-group-sm {
  font-size: $font-size-sm;

  & .form-control {
    padding: $input-padding-y-sm $input-padding-x-sm;
    line-height: $line-height-sm;
    @if $enable-rounded {
      @include border-radius($input-border-radius-sm); // compass
    }
  }

  .radio input[type="radio"],
  .radio-inline input[type="radio"],
  .checkbox input[type="checkbox"],
  .checkbox-inline input[type="checkbox"] {
    bottom: .13rem;
  }
}

.form-group-lg {
  font-size: $font-size-lg;

  & .form-control {
    padding: $input-padding-y-lg $input-padding-x-lg;
    line-height: $line-height-lg;
    @if $enable-rounded {
      @include border-radius($input-border-radius-lg); // compass
    }
  }
}


//
// textual form controls
//

.form-control {
  display: block;
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $line-height;
  color: $input-color;
  background-image: none;
  background-color: $input-bg;
  border: $border-width solid $input-border-color;

  @include box-shadow($input-box-shadow); // compass
  @if $enable-rounded {
    @include border-radius($input-border-radius);
  }
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s); //compass

  &::placeholder {
    color: $input-color-placeholder;
    opacity: 1;
  }

  @include form-control-focus();

  // Disabled
  //
  //
  &:disabled,
  &.disabled,
  &[readonly]
  fieldset[disabled] & {
    background-color: $input-bg-disabled;
    border: transparent;
    opacity: .6;
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}

.form-control-sm {
  padding: $input-padding-y-sm $input-padding-x-sm;
  font-size: $font-size-sm;
  line-height: $line-height-sm;
  @if $enable-rounded {
    @include border-radius($input-border-radius-sm); // compass
  }
}

.form-control-lg {
  padding: $input-padding-y-lg $input-padding-x-lg;
  font-size: $font-size-lg;
  line-height: $line-height-lg;
  @if $enable-rounded {
    @include border-radius($input-border-radius-lg); // compass
  }
}

.form-group > label {
  display: inline-block;
  font-weight: 700;
  margin-bottom: 5px;
  max-width: 100%;
}


// Define the label style of form-group
.form-control-label {
  padding: ($input-padding-y + $border-width) $input-padding-x;
  margin-bottom: 0 !important;
}

// Select
//
.select {
  position: relative;
}
select.form-control {
  // remove the default style
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;

  & + div[class^="triangle"] {
    position: absolute;
    top: 43%;
    right: 10px;
  }

  & > option {
    padding-left: $space-default;
    padding-right: $space-default;
  }
}

//
// Checkbox and radio
//


.radio,
.checkbox {
  position: relative;
  display: block;
  margin-bottom: $space-sm;

  label {
    padding-left: 1.25rem;
    margin-bottom: 0;
    font-weight: normal;
    //cursor: pointer;
  }
}

.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;
  left: 0;
  bottom: .25rem;
}

.radio + .radio,
.checkbox + .checkbox {
  margin-top: -.25rem;
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  position: relative;
  display: inline-block;
  padding-left: 1.25rem;
  margin-bottom: 0;
  margin-right: .75rem;
  font-weight: normal;
  vertical-align: middle;
  //cursor: pointer;
}
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
}

// switch checkbox
//
.checkbox-switch {
  position: relative;
  display: inline-block;
  width: 4.75rem;
  height: 2.375rem;
  margin-bottom: $space-sm;

  & input[type="checkbox"] {
    opacity: 0;
  }
  & input[type="checkbox"]:checked + label,
  & input[type="checkbox"]:not(:checked) + label {
    background-color: #e0e0e0;
    border-radius: 1000px;
    cursor: pointer;
    display: inline-block;
    position: absolute;
    left: 0;
    text-indent: -9999px;
    width: 4.75rem;
    height: 2.375rem;
    -webkit-transition: background-color 0.3s;
    transition: background-color 0.3s;
  }

  & input[type="checkbox"]:checked + label:after,
  & input[type="checkbox"]:not(:checked) + label:after {
    background-color: #fff;
    border-radius: 1000px;
    content: "";
    left: .125rem;
    position: absolute;
    top: .125rem;
    width: 2.125rem;
    height: 2.125rem;
    -webkit-transition: left 0.3s;
    transition: left 0.3s;
  }

  & input[type="checkbox"]:checked + label {
    background-color: $brand-primary;
  }

  & input[type="checkbox"]:checked + label:after {
    left: 2.5rem;
  }

  &.disabled input[type="checkbox"] + label {
    cursor: $cursor-disabled;
    background-color: #e0e0e0;
  }

  &.disabled input[type="checkbox"] + label:after {
    cursor: $cursor-disabled;
    left: .125rem;
  }
}

// Disabled
//
input[type="radio"],
input[type="checkbox"] {
  &:disabled,
  &.disabled,
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}

.radio-inline,
.checkbox-inline,
.radio,
.checkbox {
  &.disabled,
  fieldset[disabled] & {
    label {
      cursor: $cursor-disabled;
      opacity: .6;
    }
  }
}

//
// Form status
// success, wraning and error

// Form control status
// this status can't influence the lable of this group.
.form-control-success,
.form-control-wraning,
.form-control-error {
  padding-right: ($input-padding-x * 3);
  background-position: center right ($input-height * .25);
  background-size: ($input-height * .65) ($input-height * .65);
  background-repeat: no-repeat;
}

.form-control-success {
  @include form-control-status(success, $brand-success);
  background-image: url($form-icon-success);
}
.form-control-wraning {
  background-image: url($form-icon-warning);
}
.form-control-error {
  background-image: url($form-icon-error);
}

// Form group status {
//
.form-group-success,
.form-group-wraning,
.form-group-error {
  .form-control {
    padding-right: ($input-padding-x * 3);
    background-position: center right ($input-height * .25);
    background-size: ($input-height * .65) ($input-height * .65);
    background-repeat: no-repeat;
  }
}
.form-group-success {
  color: $brand-success;
  @include form-group-status(success, $brand-success);

  .form-control {
    background-image: url($form-icon-success);
  }
}

.form-group-wraning {
  color: $brand-warning;
  @include form-group-status(warning, $brand-warning);

  .form-control {
    background-image: url($form-icon-warning);
  }
}

.form-group-error {
  color: $brand-danger;
  @include form-group-status(error, $brand-danger);

  .form-control {
    background-image: url($form-icon-error);
  }
}


// Input group
//
//.input-group {
//  @include input-group($brand-primary);
//
//  & input:focus {
//    @include box-shadow(inset 0 1px 1px rgba($brand-primary, .2), 0 0 8px rgba($brand-primary, .5)); // compass
//  }
//
//  &.input-group-btn {
//    @include input-group-btn();
//    border: none;
//  }
//}

//
// Input group
//

.input-group {
  position: relative;

  @if $enable-flex {
    display: flex;
  } @else {
    display: table;
    border-collapse: separate;
  }

  .form-control {
    position: relative;
    border-color: $brand-primary;
    z-index: 2;
    @if $enable-flex {
      flex: 1;
    } @else {
      float: left;
      width: 100%;
    }
    margin-bottom: 0;
  }
}

// Sizing
//
//
// Input groups size
//
//
.input-group-lg {
  .input-group-addon {
    padding: $input-padding-y-lg $input-padding-x-lg;
  }

  .btn,
  .form-control {
    padding: $input-padding-y-lg $input-padding-x-lg;
    font-size: $font-size-lg;
    @if $enable-rounded {
      @include border-radius($border-radius-lg);
    }
  }
}
.input-group-sm {
  .input-group-addon {
    padding: $input-padding-y-sm $input-padding-x-sm;
  }

  .btn,
  .form-control {
    padding: $input-padding-y-sm $input-padding-x-sm;
    font-size: $font-size-sm;
    @if $enable-rounded {
      @include border-radius($border-radius-sm);
    }
  }
}
// addon
//
.input-group-addon {
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  font-weight: normal;
  line-height: 1;
  color: $input-color;
  text-align: center;
  background-color: rgba($brand-primary, .08);
  border: 1px solid $brand-primary;
  @if $enable-rounded {
    @include border-radius($border-radius);
  }
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }
}

.input-group-addon,
.input-group-btn,
.input-group .form-control {
  @if $enable-flex {
    // do nothing
  } @else {
    display: table-cell;
  }

  &:not(:first-child):not(:last-child) {
    @if $enable-rounded {
      @include border-radius(0);
    }
  }
}

.input-group-block {
  .input-group-addon,
  .input-group-btn {
    @if $enable-flex {
      // do nothing
    } @else {
      width: 1%;
    }
  }
}
.input-group-addon,
.input-group-btn {
  @if $enable-flex {
    // do nothing
  } @else {
    width: inherit;
  }
  white-space: nowrap;
  vertical-align: middle; // Match the inputs
}


// Sizing options
// Remix the default form control sizing classes into new ones for easier
// manipulation.
//.input-group-lg > .form-control,
//.input-group-lg > .input-group-addon,
//.input-group-lg > .input-group-btn > .btn {
//  @extend .form-control-lg;
//}
//.input-group-sm > .form-control,
//.input-group-sm > .input-group-addon,
//.input-group-sm > .input-group-btn > .btn {
//  @extend .form-control-sm;
//}

// Reset rounded corners
//
//
.input-group .form-control:first-child,
.input-group-addon:first-child,
.input-group-btn:first-child > .btn,
.input-group-btn:first-child > .btn-group > .btn,
.input-group-btn:first-child > .dropdown-toggle,
.input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group-btn:last-child > .btn-group:not(:last-child) > .btn {
  @if $enable-rounded {
    @include border-right-radius(0);
  }
}
.input-group-addon:first-child {
  border-right: 0;
}
.input-group .form-control:last-child,
.input-group-addon:last-child,
.input-group-btn:last-child > .btn,
.input-group-btn:last-child > .btn-group > .btn,
.input-group-btn:last-child > .dropdown-toggle,
.input-group-btn:first-child > .btn:not(:first-child),
.input-group-btn:first-child > .btn-group:not(:first-child) > .btn {
  @if $enable-rounded {
    @include border-left-radius(0);
  }
}
.input-group-addon:last-child {
  border-left: 0;
}

// Button input groups
//
//
.input-group-btn {
  position: relative;
  font-size: 0;
  white-space: nowrap;
  border-color: $brand-primary;

  > .btn {
    position: relative;
    + .btn {
      margin-left: -1px;
    }
    @include hover-focus-active {
      z-index: 2;
    }
  }

  &:first-child {
    > .btn,
    > .btn-group {
      margin-right: -1px;
    }
  }
  &:last-child {
    > .btn,
    > .btn-group {
      z-index: 2;
      margin-left: -1px;
    }
  }
}


// Form horizontal
//
.form-hz {
  .form-group {
    margin-left: ($grid-gutter-width / -2);
    margin-right: ($grid-gutter-width / -2);
    overflow: auto;
    zoom: 1;

    .form-control-label {
      text-align: right;
    }
  }
}

// Form inline
// Inline forms' min width is bigger than 34em.
//
.form-inline {

  // `form-inline` will work when the device width more than `sm`.
  //
  @include media-breakpoint-up(sm) {
    .form-group {
      display: inline-block;
      margin-bottom: 0;
      vertical-align: middle;
      margin-right: $space-sm;

      &:last-child {
        margin-right: $space-none;
      }
    }
    .form-control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
    }

    .input-group {
      display: inline-table;
      vertical-align: middle;

      .input-group-addon,
      .input-group-btn,
      .form-control {
        width: auto;
      }
    }

    // Input groups need that 100% width though
    .input-group > .form-control {
      width: 100%;
    }

    .form-control-label {
      margin-bottom: 0;
      vertical-align: middle;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .radio,
    .checkbox {
      display: inline-block;
      margin-top: 0;
      margin-bottom: 0;
      vertical-align: middle;

      label {
        padding-left: 0;
      }
    }
    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
      position: relative;
      margin-left: 0;
    }
  }
}
