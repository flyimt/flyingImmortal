// Forms
//
//
//

//
// fieldset
//

fieldset {
  margin-bottom: $space-base * 2;
}
.fieldset-sm {
  font-size: $font-size-sm;

  & .form-control {
    padding: $input-padding-y-sm $input-padding-x-sm;
    line-height: $line-height-sm;
    @if $enable-rounded {
      @include border-radius($input-border-radius-sm); // compass
    }
  }
}

.fieldset-lg {
  font-size: $font-size-lg;

  & .form-control {
    padding: $input-padding-y-lg $input-padding-x-lg;
    line-height: $line-height-lg;
    @if $enable-rounded {
      @include border-radius($input-border-radius-lg); // compass
    }
  }
}


//
// textual form controls
//

.form-control {
  display: block;
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $line-height;
  color: $input-color;
  background-image: none;
  background-color: $input-bg;
  border: $border-width solid $input-border-color;

  @include box-shadow($input-box-shadow); // compass
  @if $enable-rounded {
    @include border-radius($input-border-radius);
  }
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s); //compass

  &::placeholder {
    color: $input-color-placeholder;
    opacity: 1;
  }

  @include form-control-focus();

  // Disabled
  //
  //
  &:disabled,
  &.disabled,
  &[readonly]
  fieldset[disabled] & {
    background-color: $input-bg-disabled;
    border: transparent;
    opacity: .6;
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}

.form-control-sm {
  padding: $input-padding-y-sm $input-padding-x-sm;
  font-size: $font-size-sm;
  line-height: $line-height-sm;
  @if $enable-rounded {
    @include border-radius($input-border-radius-sm); // compass
  }
}

.form-control-lg {
  padding: $input-padding-y-lg $input-padding-x-lg;
  font-size: $font-size-lg;
  line-height: $line-height-lg;
  @if $enable-rounded {
    @include border-radius($input-border-radius-lg); // compass
  }
}

fieldset > label {
  display: inline-block;
  font-weight: 700;
  max-width: 100%;
}


// Define the label style of fieldset
.form-control-label {
  padding: ($input-padding-y + $border-width) $input-padding-x;
  margin-bottom: 0 !important;
}

// Select
//
.select {
  position: relative;
}
select.form-control {
  // remove the default style
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;

  & + div[class^="triangle"] {
    position: absolute;
    top: 43%;
    right: 10px;
  }

  & > option {
    padding-left: $space-default;
    padding-right: $space-default;
  }
}

//
// Checkbox and radio
//


.radio,
.checkbox {
  position: relative;
  display: block;
  margin-bottom: $space-base * 2;
}

.radio,
.checkbox,
.radio-inline,
.checkbox-inline {
  > label {
    margin-bottom: 0;
    color: rgb(68,68,68);
    font-size: $input-checkbox-font-size;
    font-weight: 400;
    cursor: pointer;
    z-index: 10;

    &:before {
      content: "";
      display: inline-block;
      position: relative;
      top: -1px;
      margin-right: 10px;
      width: 20px;
      height: 20px;
      box-sizing: border-box;
      vertical-align: middle;
      border: 1px solid #ccc;
    }
  }

  input:not(:disabled) + label:hover:before {
    border-width: 2px;
  }

  input:checked + label:before {
    content: '\2714';
    font-size: 12px;
    border: 2px solid #777;
    color: #333;
    text-align: center;
  }
}

.radio,
.radio-inline {
  > label:before {
    @include border-radius($border-radius-hg);
  }
}

.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;
  top: 4px;
  width: 20px;
  height: 20px;
  opacity: 0;
  z-index: 11;
}

.radio + .radio,
.checkbox + .checkbox {
  margin-top: -.25rem;
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  position: relative;
  display: inline-block;
  margin-bottom: 0;
  margin-right: .75rem;
  font-weight: normal;
  vertical-align: middle;
}

.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-left: 15px;
  margin-top: 0;
}

// Situation
//
//
@include radio-checkbox-variant('primary', $brand-primary);
@include radio-checkbox-variant('secondary', $brand-secondary);
@include radio-checkbox-variant('success', $brand-success);
@include radio-checkbox-variant('info', $brand-info);
@include radio-checkbox-variant('warning', $brand-warning);
@include radio-checkbox-variant('danger', $brand-danger);

// switch checkbox
//
.checkbox-switch {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  width: 48px;
  height: 24px;
  margin-bottom: $space-base * 2;

  & input[type="checkbox"] {
    opacity: 0;
  }
  & input[type="checkbox"]:checked + label,
  & input[type="checkbox"]:not(:checked) + label {
    background-color: #e0e0e0;
    border-radius: 1000px;
    cursor: pointer;
    display: inline-block;
    position: absolute;
    left: 0;
    text-indent: -9999px;
    width: 48px;
    height: 24px;
    -webkit-transition: background-color 0.3s;
    transition: background-color 0.3s;
  }

  & input[type="checkbox"]:checked + label:after,
  & input[type="checkbox"]:not(:checked) + label:after {
    background-color: #fff;
    border-radius: 1000px;
    content: "";
    left: 1px;
    position: absolute;
    top: 1px;
    width: 22px;
    height: 22px;
    -webkit-transition: left 0.3s;
    transition: left 0.3s;
  }

  & input[type="checkbox"]:checked + label {
    background-color: $brand-primary;
  }

  & input[type="checkbox"]:checked + label:after {
    left: 25px;
  }

  &.disabled input[type="checkbox"],
  &.disabled input[type="checkbox"] + label {
    cursor: $cursor-disabled;
    background-color: #e0e0e0;
  }

  &.disabled input[type="checkbox"],
  &.disabled input[type="checkbox"] + label:after {
    cursor: $cursor-disabled;
    left: 1px;
  }
}
.checkbox-switch-lg {
  width: 64px;
  height: 32px;

  & input[type="checkbox"]:checked + label,
  & input[type="checkbox"]:not(:checked) + label {
    width: 64px;
    height: 32px;
  }

  & input[type="checkbox"]:checked + label:after,
  & input[type="checkbox"]:not(:checked) + label:after {
    width: 30px;
    height: 30px;
  }
  & input[type="checkbox"]:checked + label:after {
    left: 33px;
  }
}
.checkbox-switch-sm {
  width: 32px;
  height: 16px;

  & input[type="checkbox"]:checked + label,
  & input[type="checkbox"]:not(:checked) + label {
    width: 32px;
    height: 16px;
  }

  & input[type="checkbox"]:checked + label:after,
  & input[type="checkbox"]:not(:checked) + label:after {
    width: 14px;
    height: 14px;
  }
  & input[type="checkbox"]:checked + label:after {
    left: 17px;
  }
}
// Situation
//
@include checkbox-switch-variant('secondary',$brand-secondary);
@include checkbox-switch-variant('success',$brand-success);
@include checkbox-switch-variant('info',$brand-info);
@include checkbox-switch-variant('warning',$brand-warning);
@include checkbox-switch-variant('danger',$brand-danger);

// Disabled
//
input[type="radio"],
input[type="checkbox"] {
  &:hover {
    cursor: pointer;

    + label:before {
      border-width: 2px;
    }
  }

  &:disabled,
  &.disabled,
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}

.radio-inline,
.checkbox-inline,
.radio,
.checkbox {
  &.disabled,
  fieldset[disabled] & {
    label {
      cursor: $cursor-disabled;
      opacity: .6;
    }
  }
}

//
// File upload
//
.form-file {
  position: relative;
  input[type="file"] {
    position: absolute;
    height: 100%;
    opacity: 0;
    background-color: transparent;
  }
  .file-surface {
    width: 100%;
    height: 100%;
    padding: .37rem .75rem;
    background-color: $brand-primary;
    @if $enable-rounded {
      @include border-radius($border-radius);
    }
    text-align: center;
    color: #fff;
    font-size: 14px;
    font-weight: 400;//
  }
}

// Situation
//

//
// Form status
// success, warning and error

// Form control status
// this status can't influence the lable of this group.
.form-control-success,
.form-control-warning,
.form-control-error {
  padding-right: ($input-padding-x * 3);
  background-position: center right ($input-height * .25);
  background-size: ($input-height * .65) ($input-height * .65);
  background-repeat: no-repeat;
}

.form-control-success {
  @include form-control-status(success, $brand-success);
  background-image: url($form-icon-success);
}
.form-control-warning {
  @include form-control-status(warning, $brand-warning);
  background-image: url($form-icon-warning);
}
.form-control-error {
  @include form-control-status(error, $brand-danger);
  background-image: url($form-icon-error);
}

// Form group status {
//
.fieldset-success,
.fieldset-warning,
.fieldset-error {
  .form-control {
    padding-right: ($input-padding-x * 3);
    background-position: center right ($input-height * .25);
    background-size: ($input-height * .65) ($input-height * .65);
    background-repeat: no-repeat;
  }
}
.fieldset-success {
  color: $brand-success;
  @include fieldset-status(success, $brand-success);

  .form-control {
    background-image: url($form-icon-success);
  }
}

.fieldset-warning {
  color: $brand-warning;
  @include fieldset-status(warning, $brand-warning);

  .form-control {
    background-image: url($form-icon-warning);
  }
}

.fieldset-error {
  color: $brand-danger;
  @include fieldset-status(error, $brand-danger);

  .form-control {
    background-image: url($form-icon-error);
  }
}


// Form horizontal
//
.form-hz {
  fieldset {
    margin-left: ($grid-gutter-width / -2);
    margin-right: ($grid-gutter-width / -2);
    overflow: auto;
    zoom: 1;

    .form-control-label {
      text-align: right;
    }
  }
}

// Form inline
// Inline forms' min width is bigger than 34em.
//
.form-inline {

  // `form-inline` will work when the device width more than `sm`.
  //
  @include media-breakpoint-up(sm) {
    fieldset {
      display: inline-block;
      margin-bottom: 0;
      vertical-align: middle;
      margin-right: $space-base * 2;

      &:last-child {
        margin-right: $space-none;
      }
    }
    .form-control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `fieldset`
      vertical-align: middle;
    }

    .input-group {
      display: inline-table;
      vertical-align: middle;

      .input-group-addon,
      .input-group-btn,
      .form-control {
        width: auto;
      }
    }

    // Input groups need that 100% width though
    .input-group > .form-control {
      width: 100%;
    }

    .form-control-label {
      margin-bottom: 0;
      vertical-align: middle;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .radio,
    .checkbox {
      display: inline-block;
      margin-top: 0;
      margin-bottom: 0;
      vertical-align: middle;

      label {
        padding-left: 0;
      }
    }
    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
      position: relative;
      margin-left: 0;
    }
  }
}
